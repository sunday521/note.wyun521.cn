import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.cc795e4d.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"note/html&css/css-day04.md","filePath":"note/html&css/css-day04.md"}'),l={name:"note/html&css/css-day04.md"},o=p(`<h2 id="css-第四天" tabindex="-1">CSS 第四天 <a class="header-anchor" href="#css-第四天" aria-label="Permalink to &quot;CSS 第四天&quot;">​</a></h2><h3 id="css-盒模型" tabindex="-1">CSS 盒模型 <a class="header-anchor" href="#css-盒模型" aria-label="Permalink to &quot;CSS 盒模型&quot;">​</a></h3><h4 id="盒模型分类" tabindex="-1">盒模型分类 <a class="header-anchor" href="#盒模型分类" aria-label="Permalink to &quot;盒模型分类&quot;">​</a></h4><p>网页是由一个一个盒子组成的，盒子的作用是布局网页，摆放盒子和内容。一个盒子由四部分组成：</p><ol><li>content 内容</li><li>padding 内边距</li><li>border 边框</li><li>margin 外边框</li></ol><p>盒模型有两种：1. 标准盒模型 2. IE 盒模型</p><p><strong>标准盒模型</strong></p><p>标准盒模型是现代浏览器默认的盒模型，<strong>盒子的实际尺寸=内容（设置的宽高）+内边距+边框</strong>，也就是说，盒子的大小会受到内边距和边框的影响【可能撑大盒子】</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">box-sizing</span><span style="color:#E1E4E8;">: </span><span style="color:#85E89D;">content-box</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">/* 默认就是标准盒模型 */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">box-sizing</span><span style="color:#24292E;">: </span><span style="color:#22863A;">content-box</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">/* 默认就是标准盒模型 */</span></span></code></pre></div><p><img src="https://post-src.wyun521.top/images/image-20230714202047842.png" alt="image-20230714202047842"></p><p>添加内边距和边框后，盒子尺寸被撑大了（虽然我们设置的宽高是 200px，但盒子大小已经是 242px 了）</p><p><strong>IE 盒模型</strong></p><p>IE 盒模型是另一种盒模型，这种盒模型下，<strong>盒子的实际尺寸=设置的宽高=内容内边距+边框</strong>，也就是说，盒子的大小固定，宽高设多少就一定是多少</p><p>转换为 IE 盒模型：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">box-sizing</span><span style="color:#E1E4E8;">: </span><span style="color:#85E89D;">border-box</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">box-sizing</span><span style="color:#24292E;">: </span><span style="color:#22863A;">border-box</span><span style="color:#24292E;">;</span></span></code></pre></div><p><img src="https://post-src.wyun521.top/images/image-20230714202143029.png" alt="image-20230714202143029"></p><p>转换为 IE 盒模型后，盒子的宽高就固定了，此时再添加内边距和边框，盒子大小也不会被改变，只是会向内挤压内容区域</p><h4 id="边框" tabindex="-1">边框 <a class="header-anchor" href="#边框" aria-label="Permalink to &quot;边框&quot;">​</a></h4><p><code>border</code> 属性用来给元素添加边框，例如：</p><div class="language-csss vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csss</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">border: 1px solid red;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">border: 1px solid red;</span></span></code></pre></div><p>border 属性其实是下面三个属性的连写：</p><ul><li>border-width: 边框粗细，默认 3px</li><li>border-style: 边框样式（solid 实线，dashed 虚线，dotted 点线）【必填】</li><li>border-color：边框颜色，默认黑色</li></ul><blockquote><ul><li>如果没有设置边框样式，那么另外两个属性将不会生效</li><li>盒子要有大小，边框才能够正常显示</li></ul></blockquote><p><strong>清除边框：</strong></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">border: 0; </span><span style="color:#6A737D;">/* 或 border: none; */</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">border: 0; </span><span style="color:#6A737D;">/* 或 border: none; */</span></span></code></pre></div><h4 id="内边距" tabindex="-1">内边距 <a class="header-anchor" href="#内边距" aria-label="Permalink to &quot;内边距&quot;">​</a></h4><p><code>padding</code> 属性用来设置内边距，即内容和边框之间的距离。它可以接受多个值：</p><p><img src="https://post-src.wyun521.top/images/image-20230714203746370.png" alt="image-20230714203746370"></p><blockquote><p>记忆口诀：上右下左填值，没值看对面</p></blockquote><blockquote><p>给盒子设置背景颜色，会填充内容区域和 padding 区域</p></blockquote><h4 id="外边距" tabindex="-1">外边距 <a class="header-anchor" href="#外边距" aria-label="Permalink to &quot;外边距&quot;">​</a></h4><p><code>margin</code> 属性用来设置外边距，外边距是两个元素之间的距离（在元素边框之外）。当子元素是一个块元素并且宽度小于父元素宽度时，剩余宽度会被 margin 占据</p><p>外边距的用法和内边距基本相同，其中外边距的一个常见用法是<strong>使块元素水平居中：</strong></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#eee</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">.box</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">width</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">200</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">height</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">200</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">pink</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/* 行内元素、行内块元素水平居中 */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">text-align</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/* 块元素水平居中 */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/* 方式一 */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">margin-left</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">margin-right</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/* 方式二 */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">margin</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">/* 方式三 */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">margin</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">body</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">#eee</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.box</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">width</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">200</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">height</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">200</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">pink</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/* 行内元素、行内块元素水平居中 */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">text-align</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">center</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/* 块元素水平居中 */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/* 方式一 */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">margin-left</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">margin-right</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/* 方式二 */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">margin</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">/* 方式三 */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">margin</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><img src="https://post-src.wyun521.top/images/image-20230715102505482.png" alt="image-20230715102505482"></p><blockquote><p>块元素水平居中的前提是，这个块元素要有自定义的宽度！</p></blockquote><p><strong>使用外边距可能会有一些意想不到的问题：</strong></p><p><strong>问题一 外边距合并</strong></p><p>垂直方向上并列的两个盒子，如果它们都设置了 margin，那么它们之间的外边距会合并【取较大值】</p><p><img src="https://post-src.wyun521.top/images/image-20230715142940215.png" alt="image-20230715142940215"></p><p><img src="https://post-src.wyun521.top/images/image-20230715142902734.png" alt="image-20230715142902734"></p><p>两个盒子之间的距离不是两者上下 margin 之和 150px，而是其中的较大值 100px</p><blockquote><p>margin 在水平方向上叠加，在垂直方向上合并</p></blockquote><p><strong>问题二 外边距塌陷</strong></p><p>嵌套的两个元素，给子元素设置 <code>marign-top </code>，会把父元素一起带下去：</p><p><img src="https://post-src.wyun521.top/images/image-20230715153059901.png" alt="image-20230715153059901"></p><p>解决方法（BFC）：</p><ul><li>改为给父元素设置 padding-top 代替</li><li>给父元素设置 overflow: hidden;</li><li>给父元素设置 border-top</li></ul><h3 id="盒模型补充" tabindex="-1">盒模型补充 <a class="header-anchor" href="#盒模型补充" aria-label="Permalink to &quot;盒模型补充&quot;">​</a></h3><h4 id="溢出隐藏" tabindex="-1">溢出隐藏 <a class="header-anchor" href="#溢出隐藏" aria-label="Permalink to &quot;溢出隐藏&quot;">​</a></h4><p>使用 <code>overflow</code> 属性可以改变内容超出元素尺寸时的处理方式</p><p><img src="https://post-src.wyun521.top/images/image-20230715154254363.png" alt="image-20230715154254363"></p><p><img src="https://post-src.wyun521.top/images/image-20230715154344610.png" alt="image-20230715154344610"></p><p>添加 overflow: hidden 后</p><p><img src="https://post-src.wyun521.top/images/image-20230715154407248.png" alt="image-20230715154407248"></p><h4 id="清除默认边距" tabindex="-1">清除默认边距 <a class="header-anchor" href="#清除默认边距" aria-label="Permalink to &quot;清除默认边距&quot;">​</a></h4><p>html 中大多数块元素都有默认的边距，为了消除对布局的影响，一般在开发前期就要清除默认边距：</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">*</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">margin</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">padding</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">box-sizing</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">border-box</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">*</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">margin</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">padding</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">box-sizing</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">border-box</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><img src="https://post-src.wyun521.top/images/image-20230715161819063.png" alt="image-20230715161819063"></p><p>清除默认边距后：</p><p><img src="https://post-src.wyun521.top/images/image-20230715161900764.png" alt="image-20230715161900764"></p><h4 id="行内元素设置边距" tabindex="-1">行内元素设置边距 <a class="header-anchor" href="#行内元素设置边距" aria-label="Permalink to &quot;行内元素设置边距&quot;">​</a></h4><p><strong>行内元素只能设置水平方向上的边距，设置垂直边距会有问题：</strong></p><p><img src="https://post-src.wyun521.top/images/image-20230715153717819.png" alt="image-20230715153717819"></p><p>结果：垂直外边距没有生效</p><p><img src="https://post-src.wyun521.top/images/image-20230715153823209.png" alt="image-20230715153823209"></p><p>结果：垂直内边距上下不一致，并且布局错乱</p><blockquote><p>我们一般不会被行内元素设置上下边距，只会设置左右边距</p></blockquote><h4 id="结构选择器补充" tabindex="-1">结构选择器补充 <a class="header-anchor" href="#结构选择器补充" aria-label="Permalink to &quot;结构选择器补充&quot;">​</a></h4><p><img src="https://post-src.wyun521.top/images/image-20230715094004038.png" alt="image-20230715094004038"></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* 只看li元素，对第一个元素没有要求 */</span></span>
<span class="line"><span style="color:#B392F0;">.nav</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">ul</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">li</span><span style="color:#B392F0;">:first-of-type</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">skyblue</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#B392F0;">.nav</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">ul</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">li</span><span style="color:#B392F0;">:last-of-type</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">red</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* 只看li元素，对第一个元素没有要求 */</span></span>
<span class="line"><span style="color:#6F42C1;">.nav</span><span style="color:#24292E;"> </span><span style="color:#22863A;">ul</span><span style="color:#24292E;"> </span><span style="color:#22863A;">li</span><span style="color:#6F42C1;">:first-of-type</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">skyblue</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6F42C1;">.nav</span><span style="color:#24292E;"> </span><span style="color:#22863A;">ul</span><span style="color:#24292E;"> </span><span style="color:#22863A;">li</span><span style="color:#6F42C1;">:last-of-type</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">background-color</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">red</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><img src="https://post-src.wyun521.top/images/image-20230715161031821.png" alt="image-20230715161031821"></p>`,72),e=[o];function t(c,r,i,y,E,d){return a(),n("div",null,e)}const u=s(l,[["render",t]]);export{h as __pageData,u as default};
