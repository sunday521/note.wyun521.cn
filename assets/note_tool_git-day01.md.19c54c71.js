import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.cc795e4d.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"note/tool/git-day01.md","filePath":"note/tool/git-day01.md"}'),p={name:"note/tool/git-day01.md"},o=l(`<h2 id="git学习笔记" tabindex="-1">Git学习笔记 <a class="header-anchor" href="#git学习笔记" aria-label="Permalink to &quot;Git学习笔记&quot;">​</a></h2><h3 id="一-git是什么" tabindex="-1">一：Git是什么 <a class="header-anchor" href="#一-git是什么" aria-label="Permalink to &quot;一：Git是什么&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Git是一个分布式版本控制系统。功能：</span></span>
<span class="line"><span style="color:#e1e4e8;">- 记录文件的变化</span></span>
<span class="line"><span style="color:#e1e4e8;">- 查看记录信息</span></span>
<span class="line"><span style="color:#e1e4e8;">- 将文件切换到记录时的状态</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Git是一个分布式版本控制系统。功能：</span></span>
<span class="line"><span style="color:#24292e;">- 记录文件的变化</span></span>
<span class="line"><span style="color:#24292e;">- 查看记录信息</span></span>
<span class="line"><span style="color:#24292e;">- 将文件切换到记录时的状态</span></span></code></pre></div><h3 id="二-git配置用户信息-安装完git后只需要配置一次即可" tabindex="-1">二：Git配置用户信息 (安装完Git后只需要配置一次即可) <a class="header-anchor" href="#二-git配置用户信息-安装完git后只需要配置一次即可" aria-label="Permalink to &quot;二：Git配置用户信息 (安装完Git后只需要配置一次即可)&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">1.配置用户名和邮箱</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--global</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user.name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;用户名&quot;</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--global</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user.email</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;邮箱&quot;</span></span>
<span class="line"><span style="color:#B392F0;">2.查看配置项</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">config</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--list</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">1.配置用户名和邮箱</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--global</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user.name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;用户名&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--global</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user.email</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;邮箱&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">2.查看配置项</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">config</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--list</span></span></code></pre></div><blockquote><p>每次 Git 提交时都会使用这些信息作为开发者标识</p></blockquote><h3 id="三-git终端在哪里开" tabindex="-1">三：Git终端在哪里开？ <a class="header-anchor" href="#三-git终端在哪里开" aria-label="Permalink to &quot;三：Git终端在哪里开？&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">1. 如果是配置全局，随便在哪开</span></span>
<span class="line"><span style="color:#e1e4e8;">2. 如果是写项目的时候，必须在项目的根目录中的空白位置开启终端</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1. 如果是配置全局，随便在哪开</span></span>
<span class="line"><span style="color:#24292e;">2. 如果是写项目的时候，必须在项目的根目录中的空白位置开启终端</span></span></code></pre></div><h3 id="四-本地初始化git仓库-一个项目只需要有一个git仓库即可" tabindex="-1">四：本地初始化Git仓库（一个项目只需要有一个Git仓库即可） <a class="header-anchor" href="#四-本地初始化git仓库-一个项目只需要有一个git仓库即可" aria-label="Permalink to &quot;四：本地初始化Git仓库（一个项目只需要有一个Git仓库即可）&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">作用：保存代码的变化</span></span>
<span class="line"><span style="color:#B392F0;">命令：</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">init</span></span>
<span class="line"><span style="color:#B392F0;">变化：多一个.git文件夹，这个.git文件夹就是Git的本地库（版本库）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">作用：保存代码的变化</span></span>
<span class="line"><span style="color:#6F42C1;">命令：</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">init</span></span>
<span class="line"><span style="color:#6F42C1;">变化：多一个.git文件夹，这个.git文件夹就是Git的本地库（版本库）</span></span></code></pre></div><h3 id="五-记录每次更新到仓库" tabindex="-1">五：记录每次更新到仓库 <a class="header-anchor" href="#五-记录每次更新到仓库" aria-label="Permalink to &quot;五：记录每次更新到仓库&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">什么时候需要记录？（想记录就记录，但是工作中一般完成一个小功能做记录）</span></span>
<span class="line"><span style="color:#B392F0;">1.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">当初始化仓库后，分为工作区、暂存区、版本库</span></span>
<span class="line"><span style="color:#B392F0;">2.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">把工作区代码提交到暂存区</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span>
<span class="line"><span style="color:#B392F0;">3.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">把暂存区代码提交到版本库</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;信息&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">什么时候需要记录？（想记录就记录，但是工作中一般完成一个小功能做记录）</span></span>
<span class="line"><span style="color:#6F42C1;">1.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">当初始化仓库后，分为工作区、暂存区、版本库</span></span>
<span class="line"><span style="color:#6F42C1;">2.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">把工作区代码提交到暂存区</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span>
<span class="line"><span style="color:#6F42C1;">3.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">把暂存区代码提交到版本库</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;信息&quot;</span></span></code></pre></div><h3 id="六-查看及切换历史版本" tabindex="-1">六：查看及切换历史版本 <a class="header-anchor" href="#六-查看及切换历史版本" aria-label="Permalink to &quot;六：查看及切换历史版本&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">1.查看历史版本</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">log</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--oneline</span><span style="color:#E1E4E8;"> (查看简略信息：查看的是当前记录及之前的)</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">log</span><span style="color:#E1E4E8;">           (查看详细信息)</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">reflog</span><span style="color:#E1E4E8;">        (查看完整历史版本)</span></span>
<span class="line"><span style="color:#B392F0;">2.切换历史版本</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">reset</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--hard</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">版本号</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">在历史记录最左边黄色字</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">3.清屏</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clear</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">1.查看历史版本</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">log</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--oneline</span><span style="color:#24292E;"> (查看简略信息：查看的是当前记录及之前的)</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">log</span><span style="color:#24292E;">           (查看详细信息)</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">reflog</span><span style="color:#24292E;">        (查看完整历史版本)</span></span>
<span class="line"><span style="color:#6F42C1;">2.切换历史版本</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">reset</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--hard</span><span style="color:#24292E;"> </span><span style="color:#032F62;">版本号</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">在历史记录最左边黄色字</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">3.清屏</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clear</span></span></code></pre></div><h3 id="七-忽略文件及检查文件状态" tabindex="-1">七：忽略文件及检查文件状态 <a class="header-anchor" href="#七-忽略文件及检查文件状态" aria-label="Permalink to &quot;七：忽略文件及检查文件状态&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">为什么要忽略文件？因为有些文件不希望提交到版本库中，比如说自动生成的文件(.vscode</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">忽略文件：创建.gitignore文件</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">并在里面写需要被忽略文件名</span></span>
<span class="line"><span style="color:#B392F0;">工作中通常不需要我们配置.gitignore</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">（因为默认就设置好了）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">**</span><span style="color:#E1E4E8;">检查文件状态（想用就用，通常想检查文件状态的时候用）</span></span>
<span class="line"><span style="color:#B392F0;">命令：</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">文件的三种状态：</span></span>
<span class="line"><span style="color:#B392F0;">1.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">红色:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">工作区的修改</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">2.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">绿色:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">暂存区的修改</span><span style="color:#E1E4E8;"> -</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">3.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nothing</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit：（版本库的修改</span><span style="color:#E1E4E8;"> -</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">）或者</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">刚创建项目文件夹的时候</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">为什么要忽略文件？因为有些文件不希望提交到版本库中，比如说自动生成的文件(.vscode</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">忽略文件：创建.gitignore文件</span><span style="color:#24292E;"> </span><span style="color:#032F62;">并在里面写需要被忽略文件名</span></span>
<span class="line"><span style="color:#6F42C1;">工作中通常不需要我们配置.gitignore</span><span style="color:#24292E;"> </span><span style="color:#032F62;">（因为默认就设置好了）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">**</span><span style="color:#24292E;">检查文件状态（想用就用，通常想检查文件状态的时候用）</span></span>
<span class="line"><span style="color:#6F42C1;">命令：</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">status</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">文件的三种状态：</span></span>
<span class="line"><span style="color:#6F42C1;">1.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">红色:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">工作区的修改</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">2.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">绿色:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">暂存区的修改</span><span style="color:#24292E;"> -</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#6F42C1;">3.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">nothing</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit：（版本库的修改</span><span style="color:#24292E;"> -</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">）或者</span><span style="color:#24292E;"> </span><span style="color:#032F62;">刚创建项目文件夹的时候</span></span></code></pre></div><h3 id="八-git分支" tabindex="-1">八：Git分支 <a class="header-anchor" href="#八-git分支" aria-label="Permalink to &quot;八：Git分支&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">1.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">查看分支</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">branch</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">（查看本地所有分支）</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">branch</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-a</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">（查看远程所有分支）</span></span>
<span class="line"><span style="color:#B392F0;">2.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">切换分支</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">分支名</span></span>
<span class="line"><span style="color:#B392F0;">3.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">创建分支</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">①新分支内有所在分支的提交记录/内容</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">②创建的新分支不会自动切换指针</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">branch</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">新分支名</span></span>
<span class="line"><span style="color:#B392F0;">4.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">合并分支</span><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">步骤：①切换到要合并的分支去</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">分支名</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">②合并要被合并的分支</span><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">merge</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">要被合并的分支名</span></span>
<span class="line"><span style="color:#B392F0;">5.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">删除分支</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">branch</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-d</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">要被删除的分支名</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">（只能删除已被合并的分支）</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">branch</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-D</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">要被删除的分支名</span><span style="color:#E1E4E8;">  (可以删除未被合并的分支)</span></span>
<span class="line"><span style="color:#B392F0;">6.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">创建及切换分支</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">checkout</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-b</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">新分支名</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">1.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">查看分支</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">branch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">（查看本地所有分支）</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">branch</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-a</span><span style="color:#24292E;">  </span><span style="color:#032F62;">（查看远程所有分支）</span></span>
<span class="line"><span style="color:#6F42C1;">2.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">切换分支</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">分支名</span></span>
<span class="line"><span style="color:#6F42C1;">3.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">创建分支</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">①新分支内有所在分支的提交记录/内容</span><span style="color:#24292E;"> </span><span style="color:#032F62;">②创建的新分支不会自动切换指针</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">branch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">新分支名</span></span>
<span class="line"><span style="color:#6F42C1;">4.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">合并分支</span><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">步骤：①切换到要合并的分支去</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#032F62;">分支名</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">②合并要被合并的分支</span><span style="color:#24292E;">   </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">merge</span><span style="color:#24292E;"> </span><span style="color:#032F62;">要被合并的分支名</span></span>
<span class="line"><span style="color:#6F42C1;">5.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">删除分支</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">branch</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-d</span><span style="color:#24292E;"> </span><span style="color:#032F62;">要被删除的分支名</span><span style="color:#24292E;"> </span><span style="color:#032F62;">（只能删除已被合并的分支）</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">branch</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-D</span><span style="color:#24292E;"> </span><span style="color:#032F62;">要被删除的分支名</span><span style="color:#24292E;">  (可以删除未被合并的分支)</span></span>
<span class="line"><span style="color:#6F42C1;">6.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">创建及切换分支</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">checkout</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-b</span><span style="color:#24292E;"> </span><span style="color:#032F62;">新分支名</span></span></code></pre></div><h3 id="九-git冲突" tabindex="-1">九：Git冲突 <a class="header-anchor" href="#九-git冲突" aria-label="Permalink to &quot;九：Git冲突&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">原因：不同分支+相同文件+相同位置+不同修改；在合并的时候一定会产生冲突(CONFLICT</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">如何解决冲突？</span></span>
<span class="line"><span style="color:#B392F0;">根据VSCODE提示来解决冲突即可</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">解决完后一定要记得记录</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">原因：不同分支+相同文件+相同位置+不同修改；在合并的时候一定会产生冲突(CONFLICT</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">如何解决冲突？</span></span>
<span class="line"><span style="color:#6F42C1;">根据VSCODE提示来解决冲突即可</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">解决完后一定要记得记录</span></span></code></pre></div><h3 id="十-git远程仓库" tabindex="-1">十：Git远程仓库 <a class="header-anchor" href="#十-git远程仓库" aria-label="Permalink to &quot;十：Git远程仓库&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">作用：本次仓库备份；多人协作</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">1.新建仓库和推送</span><span style="color:#E1E4E8;"> (把本地仓库上传到远程做备份)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">①：准备一个本地仓库</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">②：远程(Gitee</span><span style="color:#E1E4E8;">)新建一个空的Git仓库</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">③：</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remote</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">远程仓库地址</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">④：</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-u</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">分支名</span><span style="color:#E1E4E8;"> (本地有几个分支就推送几次)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">2.开发及推送</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">正常开发记录</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add+commit</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">命令：</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">什么时候进行推送：想推就推，但是一般来说工作中完成了一个大功能做推送</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#B392F0;">3.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">克隆</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">什么时候克隆？刚进入公司/换电脑的时候，此时因为电脑中没有项目，所以需要从远处克隆一份</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">命令：</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">远程仓库地址</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#B392F0;">4.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">拉取</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">想拉就拉，拉取会把远程仓库的代码合并到本地</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">命令：</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pull</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">注意：一定要先拉再推</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#B392F0;">5.</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">配置SSH</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">原因：ssh比https更加安全，工作中常用</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">配置步骤是固定的</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">好处：不用再输密码；没有warning(警告</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">作用：本次仓库备份；多人协作</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">1.新建仓库和推送</span><span style="color:#24292E;"> (把本地仓库上传到远程做备份)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">①：准备一个本地仓库</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">②：远程(Gitee</span><span style="color:#24292E;">)新建一个空的Git仓库</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">③：</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remote</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">远程仓库地址</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">④：</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-u</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">分支名</span><span style="color:#24292E;"> (本地有几个分支就推送几次)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">2.开发及推送</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">正常开发记录</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add+commit</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">命令：</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">什么时候进行推送：想推就推，但是一般来说工作中完成了一个大功能做推送</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#6F42C1;">3.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">克隆</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">什么时候克隆？刚进入公司/换电脑的时候，此时因为电脑中没有项目，所以需要从远处克隆一份</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">命令：</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">远程仓库地址</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#6F42C1;">4.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">拉取</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">想拉就拉，拉取会把远程仓库的代码合并到本地</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">命令：</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pull</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">注意：一定要先拉再推</span></span>
<span class="line"><span style="color:#24292E;">  </span></span>
<span class="line"><span style="color:#6F42C1;">5.</span><span style="color:#24292E;"> </span><span style="color:#032F62;">配置SSH</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">原因：ssh比https更加安全，工作中常用</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">配置步骤是固定的</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">好处：不用再输密码；没有warning(警告</span><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="十一-在vscode中使用git" tabindex="-1">十一：在vscode中使用git <a class="header-anchor" href="#十一-在vscode中使用git" aria-label="Permalink to &quot;十一：在vscode中使用git&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">可以简化Git常用操作</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">使用：左侧第三个分叉的图标</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">1. 记录</span></span>
<span class="line"><span style="color:#e1e4e8;">   + - 对应add .</span></span>
<span class="line"><span style="color:#e1e4e8;">   √(注意:点√前需要输入提交的信息)   对应commit -m &quot;信息&quot; </span></span>
<span class="line"><span style="color:#e1e4e8;">2. 分支</span></span>
<span class="line"><span style="color:#e1e4e8;">   查看-&gt;外观-&gt;状态栏 底部可以查看当前分支及切换分支</span></span>
<span class="line"><span style="color:#e1e4e8;">   其余都在 ... -&gt; 分支 中</span></span>
<span class="line"><span style="color:#e1e4e8;">3. 推送代码到远程</span></span>
<span class="line"><span style="color:#e1e4e8;">   同步更改(会自动先拉再推)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">可以简化Git常用操作</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">使用：左侧第三个分叉的图标</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">1. 记录</span></span>
<span class="line"><span style="color:#24292e;">   + - 对应add .</span></span>
<span class="line"><span style="color:#24292e;">   √(注意:点√前需要输入提交的信息)   对应commit -m &quot;信息&quot; </span></span>
<span class="line"><span style="color:#24292e;">2. 分支</span></span>
<span class="line"><span style="color:#24292e;">   查看-&gt;外观-&gt;状态栏 底部可以查看当前分支及切换分支</span></span>
<span class="line"><span style="color:#24292e;">   其余都在 ... -&gt; 分支 中</span></span>
<span class="line"><span style="color:#24292e;">3. 推送代码到远程</span></span>
<span class="line"><span style="color:#24292e;">   同步更改(会自动先拉再推)</span></span></code></pre></div><h2 id="jwt-token-必须了解" tabindex="-1">JWT（token）- 必须了解 <a class="header-anchor" href="#jwt-token-必须了解" aria-label="Permalink to &quot;JWT（token）- 必须了解&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">本质：字符串</span></span>
<span class="line"><span style="color:#e1e4e8;">获取：服务器给的，我们只需要了解即可</span></span>
<span class="line"><span style="color:#e1e4e8;">作用：鉴定用户权限</span></span>
<span class="line"><span style="color:#e1e4e8;">分类：</span></span>
<span class="line"><span style="color:#e1e4e8;">    1. 页面 本地存储有token,允许访问；没有则不允许访问</span></span>
<span class="line"><span style="color:#e1e4e8;">    </span></span>
<span class="line"><span style="color:#e1e4e8;">    2. 接口 token有效，允许调用；无效则不允许调用   </span></span>
<span class="line"><span style="color:#e1e4e8;">       token失效原因：过期(后台设置的，比如JD过一阵子要重新登录)/被篡改</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">本质：字符串</span></span>
<span class="line"><span style="color:#24292e;">获取：服务器给的，我们只需要了解即可</span></span>
<span class="line"><span style="color:#24292e;">作用：鉴定用户权限</span></span>
<span class="line"><span style="color:#24292e;">分类：</span></span>
<span class="line"><span style="color:#24292e;">    1. 页面 本地存储有token,允许访问；没有则不允许访问</span></span>
<span class="line"><span style="color:#24292e;">    </span></span>
<span class="line"><span style="color:#24292e;">    2. 接口 token有效，允许调用；无效则不允许调用   </span></span>
<span class="line"><span style="color:#24292e;">       token失效原因：过期(后台设置的，比如JD过一阵子要重新登录)/被篡改</span></span></code></pre></div><h2 id="axios-拦截器-了解即可-工作中别人配置好了" tabindex="-1">axios-拦截器(了解即可-工作中别人配置好了) <a class="header-anchor" href="#axios-拦截器-了解即可-工作中别人配置好了" aria-label="Permalink to &quot;axios-拦截器(了解即可-工作中别人配置好了)&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">1：请求拦截器：</span></span>
<span class="line"><span style="color:#e1e4e8;">   作用：在请求到达服务器之前做一些统一的处理；比如说统一设置接口文档要求的请求头(token等) </span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">2：响应拦截器</span></span>
<span class="line"><span style="color:#e1e4e8;">   作用：在响应到达.then/.catch之前对响应做一些统一的处理；比如说统一处理token失效、数据剥离(将axios包裹的对象减少一层)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">1：请求拦截器：</span></span>
<span class="line"><span style="color:#24292e;">   作用：在请求到达服务器之前做一些统一的处理；比如说统一设置接口文档要求的请求头(token等) </span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">2：响应拦截器</span></span>
<span class="line"><span style="color:#24292e;">   作用：在响应到达.then/.catch之前对响应做一些统一的处理；比如说统一处理token失效、数据剥离(将axios包裹的对象减少一层)</span></span></code></pre></div><h2 id="echarts库" tabindex="-1">echarts库 <a class="header-anchor" href="#echarts库" aria-label="Permalink to &quot;echarts库&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">前提步骤：</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">1.</span><span style="color:#E1E4E8;"> 下包</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">导包</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">2.</span><span style="color:#E1E4E8;"> 准备一个定义了宽高的DOM容器</span></span>
<span class="line"><span style="color:#E1E4E8;">核心步骤：</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">1.</span><span style="color:#E1E4E8;"> 初始化echarts实例对象</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">myChart</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> echarts.</span><span style="color:#B392F0;">init</span><span style="color:#E1E4E8;">(dom元素)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">2.</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">指定图表的配置项和数据</span><span style="color:#E1E4E8;">: 可以影响图表的内容</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">option</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">3.</span><span style="color:#E1E4E8;"> 显示图表</span></span>
<span class="line"><span style="color:#E1E4E8;">     myChart.</span><span style="color:#B392F0;">setOption</span><span style="color:#E1E4E8;">(option)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">工作中使用echarts步骤</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">1.</span><span style="color:#E1E4E8;"> 找示例（原则：找最类似的，找最简单的）</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">2.</span><span style="color:#E1E4E8;"> 整合示例到自己代码中（echarts前提</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">核心五步骤）</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">3.</span><span style="color:#E1E4E8;"> 调设置（查文档</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">慢慢调）</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">前提步骤：</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">1.</span><span style="color:#24292E;"> 下包</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">导包</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">2.</span><span style="color:#24292E;"> 准备一个定义了宽高的DOM容器</span></span>
<span class="line"><span style="color:#24292E;">核心步骤：</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">1.</span><span style="color:#24292E;"> 初始化echarts实例对象</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">myChart</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> echarts.</span><span style="color:#6F42C1;">init</span><span style="color:#24292E;">(dom元素)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">2.</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">指定图表的配置项和数据</span><span style="color:#24292E;">: 可以影响图表的内容</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">option</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">3.</span><span style="color:#24292E;"> 显示图表</span></span>
<span class="line"><span style="color:#24292E;">     myChart.</span><span style="color:#6F42C1;">setOption</span><span style="color:#24292E;">(option)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">工作中使用echarts步骤</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">1.</span><span style="color:#24292E;"> 找示例（原则：找最类似的，找最简单的）</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">2.</span><span style="color:#24292E;"> 整合示例到自己代码中（echarts前提</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">核心五步骤）</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">3.</span><span style="color:#24292E;"> 调设置（查文档</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">慢慢调）</span></span></code></pre></div>`,30),e=[o];function c(t,r,y,E,i,F){return a(),n("div",null,e)}const h=s(p,[["render",c]]);export{C as __pageData,h as default};
